using LCH.MercedesBenz.Api.Models.Application.Permissions;
using LCH.MercedesBenz.Api.Models.Application.RolePermissions;
using LCH.MercedesBenz.Api.Models.Application.Roles;
using LCH.MercedesBenz.Api.Models.Application.Files;
using LCH.MercedesBenz.Api.Models.Application.EventFiles;
using LCH.MercedesBenz.Api.Models.Application.FileTypes;
using LCH.MercedesBenz.Api.Models.Application.Users;
using Microsoft.EntityFrameworkCore;
using LCH.MercedesBenz.Api.Models.Application.Dailies;
using LCH.MercedesBenz.Api.Models.Application.Monthlies;
using LCH.MercedesBenz.Api.Models.Application.Wholesales;
using LCH.MercedesBenz.Api.Models.Application.SecurityParameters;
using LCH.MercedesBenz.Api.Models.Application.VehicleTypes;
using LCH.MercedesBenz.Api.Models.Application.Brands;
using LCH.MercedesBenz.Api.Models.Application.Provinces;
using LCH.MercedesBenz.Api.Models.Application.CarModels;
using LCH.MercedesBenz.Api.Models.Application.Factories;
using LCH.MercedesBenz.Api.Models.Application.Owners;
using LCH.MercedesBenz.Api.Models.Application.Patentings;
using LCH.MercedesBenz.Api.Models.Application.Terminals;
using LCH.MercedesBenz.Api.Models.Application.Rules;
using LCH.MercedesBenz.Api.Models.Application.StatePatentas;
using LCH.MercedesBenz.Api.Models.Application.RuleTypes;
using LCH.MercedesBenz.Api.Models.Application.OFMM;
using LCH.MercedesBenz.Api.Models.Application.TMMVS;
using LCH.MercedesBenz.Api.Models.Application.Closures;
using LCH.MercedesBenz.Api.Models.Application.Departments;
using LCH.MercedesBenz.Api.Models.Application.Locations;
using LCH.MercedesBenz.Api.Models.Application.RegSecs;
using LCH.MercedesBenz.Api.Models.Application.InternalVersions;
using LCH.MercedesBenz.Api.Models.Application.Categories;
using LCH.MercedesBenz.Api.Models.Application.Segments;
using LCH.MercedesBenz.Api.Models.Application.InternalVersionSegmentations;
using LCH.MercedesBenz.Api.Models.Application.KeyVersions;
using LCH.MercedesBenz.Api.Models.Application.SegmentationPlates;
using LCH.MercedesBenz.Api.Models.Application.Grados;
using LCH.MercedesBenz.Api.Models.Application.OdsWholesales;
using LCH.MercedesBenz.Api.Models.Application.SpecialSales;
using LCH.MercedesBenz.Api.Models.Application.GovernmentalClassifications;
using LCH.MercedesBenz.Api.Models.Application.LegalEntities;
using LCH.MercedesBenz.Api.Models.Application.SubgovernmentalClassifications;
using LCH.MercedesBenz.Api.Models.Application.EstimatedTurnovers;
using LCH.MercedesBenz.Api.Models.Application.CuitClassifications;
using LCH.MercedesBenz.Api.Models.Application.AperturesTwo;
using LCH.MercedesBenz.Api.Models.Application.AperturesOne;
using LCH.MercedesBenz.Api.Models.Application.LogisticClassifications;
using LCH.MercedesBenz.Api.Models.Application.OdsOwnerClassifications;
using LCH.MercedesBenz.Api.Models.Application.Bodyworks;
using LCH.MercedesBenz.Api.Models.Application.BodyStyles;
using LCH.MercedesBenz.Api.Models.Application.Subsegments;
using LCH.MercedesBenz.Api.Models.Application.Usages;
using LCH.MercedesBenz.Api.Models.Application.Tractions;
using LCH.MercedesBenz.Api.Models.Application.Powers;
using LCH.MercedesBenz.Api.Models.Application.Historicals;
using LCH.MercedesBenz.Api.Models.Application.PatentingVersions; 
using LCH.MercedesBenz.Api.Models.Application.WholesaleVersions;
using LCH.MercedesBenz.Api.Models.Application.FuelTypes;
using LCH.MercedesBenz.Api.Models.Application.WheelBases;
using LCH.MercedesBenz.Api.Models.Application.AxleBases;
using LCH.MercedesBenz.Api.Models.Application.Gears;
using LCH.MercedesBenz.Api.Models.Application.Doors;
using LCH.MercedesBenz.Api.Models.Application.Sources;
using LCH.MercedesBenz.Api.Models.Application.MCGTotalMkts;
using LCH.MercedesBenz.Api.Models.Application.MotorDTs;
using LCH.MercedesBenz.Api.Models.Application.ApertureThrees;
using LCH.MercedesBenz.Api.Models.Application.ApertureFours;
using LCH.MercedesBenz.Api.Models.Application.CJDCompetitives;
using LCH.MercedesBenz.Api.Models.Application.PBTs;
using LCH.MercedesBenz.Api.Models.Application.EngineCapacitys;
using LCH.MercedesBenz.Api.Models.Application.CabinCFs;
using LCH.MercedesBenz.Api.Models.Application.CabinSDs;
using LCH.MercedesBenz.Api.Models.Application.CompetitiveCJDs;
using LCH.MercedesBenz.Api.Models.Application.Configurations;
using LCH.MercedesBenz.Api.Models.Application.AltBodysts;
using LCH.MercedesBenz.Api.Models.Application.AltCategs;
using LCH.MercedesBenz.Api.Models.Application.AltSegms;
using LCH.MercedesBenz.Api.Models.Application.AMGCompSets;
using LCH.MercedesBenz.Api.Models.Application.PBTTNs;
using LCH.MercedesBenz.Api.Models.Application.NIs;
using LCH.MercedesBenz.Api.Models.Application.RelevMBs;
using LCH.MercedesBenz.Api.Models.Application.SegmentationAux1s;
using LCH.MercedesBenz.Api.Models.Application.SSegms;
using LCH.MercedesBenz.Api.Models.Application.Groups;
using LCH.MercedesBenz.Api.Models.Application.CatRules;

namespace LCH.MercedesBenz.Api.Models.Application
{
    public static class ApplicationDbContextExtensions
    {
        public static void ToVarchar(this ModelBuilder modelBuilder)
        {
            var properties = modelBuilder.Model.GetEntityTypes()
                .SelectMany(t => t.GetProperties())
                .Where(p => p.ClrType == typeof(string) && p.GetColumnType() == null);
            foreach (var property in properties)
            {
                property.SetIsUnicode(false);
            }
        }

        public static void ApplyConfigurations(this ModelBuilder modelBuilder)
        {
            modelBuilder.ApplyConfiguration(new AxleBaseConfiguration());
            modelBuilder.ApplyConfiguration(new PermissionConfiguration());
            modelBuilder.ApplyConfiguration(new RolePermissionConfiguration());
            modelBuilder.ApplyConfiguration(new RoleConfiguration());
            modelBuilder.ApplyConfiguration(new UserConfiguration());
            modelBuilder.ApplyConfiguration(new FileConfiguration());
            modelBuilder.ApplyConfiguration(new EventFileConfiguration());
            modelBuilder.ApplyConfiguration(new FileTypeConfiguration());
            modelBuilder.ApplyConfiguration(new FuelTypeConfiguration());
            modelBuilder.ApplyConfiguration(new CabinCFConfiguration());
            modelBuilder.ApplyConfiguration(new CatRuleConfiguration());
            modelBuilder.ApplyConfiguration(new DailyConfiguration());
            modelBuilder.ApplyConfiguration(new MonthlyConfiguration());
            modelBuilder.ApplyConfiguration(new WholesaleConfiguration());
            modelBuilder.ApplyConfiguration(new SecurityParameterConfiguration());
            modelBuilder.ApplyConfiguration(new VehicleTypeConfiguration());
            modelBuilder.ApplyConfiguration(new BrandConfiguration());
            modelBuilder.ApplyConfiguration(new ProvinceConfiguration());
            modelBuilder.ApplyConfiguration(new CarModelConfiguration());
            modelBuilder.ApplyConfiguration(new FactoryConfiguration());
            modelBuilder.ApplyConfiguration(new OwnerConfiguration());
            modelBuilder.ApplyConfiguration(new PatentingConfiguration());
            modelBuilder.ApplyConfiguration(new TerminalConfiguration());
            modelBuilder.ApplyConfiguration(new StatePatentaConfiguration());
            modelBuilder.ApplyConfiguration(new RuleTypeConfiguration());
            modelBuilder.ApplyConfiguration(new RuleConfiguration());
            modelBuilder.ApplyConfiguration(new OfmmConfiguration());
            modelBuilder.ApplyConfiguration(new TMMVConfiguration());
            modelBuilder.ApplyConfiguration(new ClosureConfiguration());
            modelBuilder.ApplyConfiguration(new DepartmentConfiguration());
            modelBuilder.ApplyConfiguration(new LocationConfiguration());
            modelBuilder.ApplyConfiguration(new RegSecConfiguration());
            modelBuilder.ApplyConfiguration(new InternalVersionConfiguration());
            modelBuilder.ApplyConfiguration(new CategoryConfiguration());
            modelBuilder.ApplyConfiguration(new SegmentConfiguration());
            modelBuilder.ApplyConfiguration(new InternalVersionSegmentationConfiguration());
            modelBuilder.ApplyConfiguration(new KeyVersionConfiguration());
            modelBuilder.ApplyConfiguration(new SegmentationPlateConfiguration());
            modelBuilder.ApplyConfiguration(new GradoConfiguration());
            modelBuilder.ApplyConfiguration(new OdsWholesaleConfiguration());
            modelBuilder.ApplyConfiguration(new SpecialSaleConfiguration());
            modelBuilder.ApplyConfiguration(new GovernmentalClassificationConfiguration());
            modelBuilder.ApplyConfiguration(new LegalEntityConfiguration());
            modelBuilder.ApplyConfiguration(new SubgovernmentalClassificationConfiguration());
            modelBuilder.ApplyConfiguration(new EstimatedTurnoverConfiguration());
            modelBuilder.ApplyConfiguration(new CuitClassificationConfiguration());
            modelBuilder.ApplyConfiguration(new ApertureOneConfiguration());
            modelBuilder.ApplyConfiguration(new ApertureTwoConfiguration());
            modelBuilder.ApplyConfiguration(new LogisticClassificationConfiguration());
            modelBuilder.ApplyConfiguration(new OdsOwnerClassificationConfiguration());
            modelBuilder.ApplyConfiguration(new BodyworkConfiguration());
            modelBuilder.ApplyConfiguration(new BodyStyleConfiguration());
            modelBuilder.ApplyConfiguration(new SubsegmentConfiguration());
            modelBuilder.ApplyConfiguration(new UsageConfiguration());
            modelBuilder.ApplyConfiguration(new TractionConfiguration());
            modelBuilder.ApplyConfiguration(new PowerConfiguration());
            modelBuilder.ApplyConfiguration(new HistoricalConfiguration());
            modelBuilder.ApplyConfiguration(new PatentingVersionConfiguration());
            modelBuilder.ApplyConfiguration(new WholesaleVersionConfiguration());
            modelBuilder.ApplyConfiguration(new WheelBaseConfiguration());
            modelBuilder.ApplyConfiguration(new GearConfiguration());
            modelBuilder.ApplyConfiguration(new DoorConfiguration());
            modelBuilder.ApplyConfiguration(new SourceConfiguration());
            modelBuilder.ApplyConfiguration(new MCGTotalMktConfiguration());
            modelBuilder.ApplyConfiguration(new MotorDTConfiguration());
            modelBuilder.ApplyConfiguration(new ApertureThreeConfiguration());
            modelBuilder.ApplyConfiguration(new ApertureFourConfiguration());
            modelBuilder.ApplyConfiguration(new CJDCompetitiveConfiguration());
            modelBuilder.ApplyConfiguration(new PBTConfiguration());
            modelBuilder.ApplyConfiguration(new EngineCapacityConfiguration());
            modelBuilder.ApplyConfiguration(new CabinSDConfiguration());
            modelBuilder.ApplyConfiguration(new CompetitiveCJDConfiguration());
            modelBuilder.ApplyConfiguration(new ConfigurationConfiguration());
            modelBuilder.ApplyConfiguration(new AltBodystConfiguration());
            modelBuilder.ApplyConfiguration(new AltCategConfiguration());
            modelBuilder.ApplyConfiguration(new AltSegmConfiguration());
            modelBuilder.ApplyConfiguration(new AMGCompSetConfiguration());
            modelBuilder.ApplyConfiguration(new PBTTNConfiguration());
            modelBuilder.ApplyConfiguration(new NIConfiguration());
            modelBuilder.ApplyConfiguration(new RelevMBConfiguration());
            modelBuilder.ApplyConfiguration(new SegmentationAux1Configuration());
            modelBuilder.ApplyConfiguration(new SSegmConfiguration());
            modelBuilder.ApplyConfiguration(new GroupConfiguration());
        }

        public static void Seed(this ModelBuilder modelBuilder)
        {
            modelBuilder.SeedPermissions();
            modelBuilder.SeedRoles();
            modelBuilder.SeedRolePermissions();
            modelBuilder.SeedUsers();
            modelBuilder.SeedFileTypes();
            modelBuilder.SeedSecurityParameters();
            modelBuilder.SeedBrands();
            modelBuilder.SeedCarModels();
            modelBuilder.SeedCategories();
            modelBuilder.SeedDepartments();
            modelBuilder.SeedFactories();
            modelBuilder.SeedInternalVersions();
            modelBuilder.SeedInternalVersionSegmentations();
            modelBuilder.SeedKeyVersions();
            modelBuilder.SeedFuelType();
            modelBuilder.SeedCabinCF();
            modelBuilder.SeedLocations();
            modelBuilder.SeedOfmms();
            modelBuilder.SeedOwners();
            modelBuilder.SeedProvinces();
            modelBuilder.SeedRegSecs();
            modelBuilder.SeedSegments();
            modelBuilder.SeedTerminals();
            modelBuilder.SeedTMMVs();
            modelBuilder.SeedVehicleTypes();
            modelBuilder.SeedStatePatentas();
            modelBuilder.SeedRuleTypes();
            modelBuilder.SeedRules();
            modelBuilder.SeedGrados();
            modelBuilder.SeedGovernmentalClassifications();
            modelBuilder.SeedLegalEntities();
            modelBuilder.SeedSubgovernmentalClassifications();
            modelBuilder.SeedEstimatedTurnovers();
            modelBuilder.SeedCuitClassifications();
            modelBuilder.SeedAperturesOne();
            modelBuilder.SeedAperturesTwo();
            modelBuilder.SeedLogisticClassifications();
            modelBuilder.SeedBodyworks();
            modelBuilder.SeedBodyStyles();
            modelBuilder.SeedSubsegments();
            modelBuilder.SeedUsages();
            modelBuilder.SeedTractions();
            modelBuilder.SeedPowers();
            modelBuilder.SeedPatentingVersions();
            modelBuilder.SeedWholesaleVersions();
            modelBuilder.SeedGear();
            modelBuilder.SeedAxleBase();
            modelBuilder.SeedDoor();
            modelBuilder.SeedSource();
            modelBuilder.SeedMCGTotalMkt();
            modelBuilder.SeedMotorDT();
            modelBuilder.SeedApertureThree();
            modelBuilder.SeedApertureFour();
            modelBuilder.SeedCJDCompetitive();
            modelBuilder.SeedPBT();
            modelBuilder.SeedEngineCapacity();
            modelBuilder.SeedCabinSD();
            modelBuilder.SeedCompetitiveCJD();
            modelBuilder.SeedConfiguration();
            modelBuilder.SeedAltBodyst();
            modelBuilder.SeedAltCateg();
            modelBuilder.SeedAltSegm();
            modelBuilder.SeedAMGCompSet();
            modelBuilder.SeedPBTTN();
            modelBuilder.SeedNI();
            modelBuilder.SeedRelevMB();
            modelBuilder.SeedSegmentationAux1();
            modelBuilder.SeedSSegm();
            modelBuilder.SeedGroup();
            modelBuilder.SeedCatRule();
            modelBuilder.SeedWheelBase();
        }
    }
}
